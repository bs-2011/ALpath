setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM/ALpath/R")
#preprocessing the data
x = read.csv("HMM_sample_v2.csv",header =T)
HMMpost = posterior(HMMfit)
HMMpost = depmixS4::posterior(HMMfit)
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM/ALpath")
HMMpost = depmixS4::posterior(HMMfit)
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM/ALpath")
library(depmixS4)
:
HMMpost = depmixS4::posterior(HMMfit)
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM/ALpath/man")
HMMpost = posterior(HMMfit)
HMMpost = posterior(HMMfit)
load("C:/Users/user/Desktop/Intern-bitwise/Package/HMM/ALpath/man/HMMfit.rda")
HMMpost = posterior(HMMfit)
x = cbind(x,HMMpost$state)
tmp = HMMfit@trDens
transition_mat = matrix(unlist(tmp),ncol=4, byrow=T)
##function for task 1
task1 = function(state,y){
y = as.character(y)
index = which(x$`HMMpost$state` == state& x$Anon.Student.Id ==y)
concept = x$KC.SubSkills._01[index]
return(concept)
}
#function to predict task2
task2 = function(y){
y = as.character(y)
idx= which(x$Anon.Student.Id == y)
prediction_prob = as.matrix(HMMpost[length(idx),c(2:5)])%*%transition_mat
new_state  = which.is.max(prediction_prob)
return(new_state)
}
#function to predict task2
task2 = function(y){
y = as.character(y)
idx= which(x$Anon.Student.Id == y)
prediction_prob = as.matrix(HMMpost[length(idx),c(2:5)])%*%transition_mat
new_state  = which.is.max(prediction_prob)
return(new_state)
}
task1(3,stu_b7714a859c)
task1(3,"stu_b7714a859c")
task2("stu_b7714a859c")
task1(1,"stu_b7714a859c")
task1(4,"stu_b7714a859c")
x = cbind(x,HMMpost$state)
task1(4,"stu_b7714a859c")
##function for task 1
task1 = function(state,y){
y = as.character(y)
index = which(x$`HMMpost$state` == state& x$Anon.Student.Id ==y)
concept = x$KC.SubSkills._01[index]
return(concept)
}
task1(4,"stu_b7714a859c")
colnames(x)
task1 = function(state,y){
y = as.character(y)
index = which(x$`HMMpost$state` == state& x$Anon.Student.Id ==y)
concept = x[index,15]
return(concept)
}
task1(4,"stu_b7714a859c")
class(task1(4,"stu_b7714a859c"))
index
### Example returning the concepts name for state 3 fo student "stu_0102350af2"
index = which(x$`HMMpost$state` == 3& x$Anon.Student.Id =="stu_0102350af2")
concept = x$KC.SubSkills._01[index]
class(concept)
concept
concept = x[index,15]
concept
str(x$KC.SubSkills._01)
concept
task1 = function(state,y){
y = as.character(y)
index = which(x$`HMMpost$state` == state& x$Anon.Student.Id ==y)
concept = x[index,15]
return(concept)
}
task1(4,"stu_b7714a859c")
task1(3,"stu_0102350af2")
task2("stu_0102350af2")
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM")
library(devtools)
install("ALpath")
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM")
library(devtools)
install("ALpath")
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM/ALpath/man")
save(x,"x.rda")
save(x,file = "x.rda")
load("C:/Users/user/Desktop/Intern-bitwise/Package/HMM/ALpath/man/x.rda")
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM")
install("ALpath")
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM")
install("ALpath")
install("ALpath")
install("ALpath")
install("ALpath")
library(depmixS4)
install("ALpath")
install("ALpath")
install("ALpath")
install("ALpath")
install("ALpath")
save(HMMfit, file = "HMMfit.rds")
save(x,file = "x.rds")
install("ALpath")
install("ALpath")
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM/ALpath")
install("ALpath")
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM")
install("ALpath")
library("devtools")
install("ALpath")
install("ALpath")
install("ALpath")
library(opencpu)
#preprocessing the data
#x = read.csv("HMM_sample_v2.csv",header =T)
#library(depmixS4)
HMMfit  = readRDS(file = "./man/HMMfit.rds")
x = readRDS(file = "./man/x.rds")
HMMpost = depmixS4::posterior(HMMfit)
x = cbind(x,HMMpost$state)
tmp = HMMfit@trDens
transition_mat = matrix(unlist(tmp),ncol=4, byrow=T)
##function for task 1
task1 = function(state,y){
y = as.character(y)
index = which(x$`HMMpost$state` == state & x$Anon.Student.Id ==y)
concept = x[index,15]
return(concept)
}
#function to predict task2
task2 = function(y){
y = as.character(y)
idx= which(x$Anon.Student.Id == y)
prediction_prob = as.matrix(HMMpost[length(idx),c(2:5)])%*%transition_mat
new_state  = which.is.max(prediction_prob)
return(new_state)
}
task1(3,"stu_0102350af2")
#preprocessing the data
#x = read.csv("HMM_sample_v2.csv",header =T)
#library(depmixS4)
HMMfit  = readRDS(file = "./man/HMMfit.rds")
x = readRDS(file = "./man/x.rds")
HMMpost = depmixS4::posterior(HMMfit)
x = cbind(x,HMMpost$state)
tmp = HMMfit@trDens
transition_mat = matrix(unlist(tmp),ncol=4, byrow=T)
##function for task 1
task1 = function(state,y){
y = as.character(y)
index = which(x$`HMMpost$state` == state & x$Anon.Student.Id ==y)
concept = x[index,15]
return(concept)
}
#function to predict task2
task2 = function(y){
y = as.character(y)
idx= which(x$Anon.Student.Id == y)
prediction_prob = as.matrix(HMMpost[length(idx),c(2:5)])%*%transition_mat
new_state  = which.is.max(prediction_prob)
return(new_state)
}
#library(depmixS4)
HMMfit  = readRDS(file = "./man/HMMfit.rds")
setwd("C:/Users/user/Desktop/Intern-bitwise/Package/HMM/ALpath")
#library(depmixS4)
HMMfit  = readRDS(file = "./man/HMMfit.rds")
#library(depmixS4)
HMMfit  = load(file = "./man/HMMfit.rds")
x = load(file = "./man/x.rds")
HMMpost = depmixS4::posterior(HMMfit)
#library(depmixS4)
HMMfit  = load(file = "./man/HMMfit.rda")
x = load(file = "./man/x.rda")
#library(depmixS4)
HMMfit  = readRDS(file = "./man/HMMfit.rds")
getwd()
#library(depmixS4)
HMMfit  = readRDS(file = "./model/HMMfit.rds")
readRDS(file = "./model/HMMfit.rds")
packrat::status()
